{
  "hooks": {
    "capture_plan": {
      "enabled": true,
      "description": "Captures plans from ExitPlanMode and creates task files"
    },
    "pre_compact": {
      "enabled": true,
      "description": "Extracts error patterns before compaction"
    },
    "stop_review": {
      "enabled": true,
      "description": "Reviews changes and auto-commits each time Claude pauses working"
    },
    "edit_validation": {
      "enabled": true,
      "description": "Runs TypeScript and Biome checks on edited files",
      "typecheck": {
        "enabled": true,
        "command": "bunx tsc --noEmit"
      },
      "lint": {
        "enabled": true,
        "command": "bunx biome check"
      },
      "knip": {
        "enabled": true,
        "command": "bunx knip"
      }
    },
    "test": {
      "enabled": true
    },
    "pre_tool_validation": {
      "enabled": true,
      "description": "Pre-tool validation for task files and branch protection"
    }
  },
  "git": {
    "defaultBranch": "main",
    "description": "Default branch name for git operations (e.g., 'main' or 'master')"
  },
  "features": {
    "statusline": {
      "enabled": true,
      "description": "Custom status line showing costs and task info"
    },
    "git_branching": {
      "enabled": true,
      "description": "Create feature branches for tasks and merge on completion"
    },
    "api_timer": {
      "enabled": true,
      "description": "Display API window reset timer in statusline",
      "display": "sonnet-only"
    },
    "github_integration": {
      "enabled": true,
      "description": "Integrate with GitHub for issue tracking and PR workflow",
      "auto_create_issues": true,
      "use_issue_branches": true,
      "auto_create_prs": true,
      "repository_url": "https://github.com/cahaseler/cc-track"
    },
    "private_journal": {
      "enabled": true,
      "description": "Use private journal MCP for context preservation and learning"
    },
    "branch_protection": {
      "enabled": true,
      "description": "Block edits on protected branches to enforce feature branch workflow",
      "protected_branches": ["main", "master"],
      "allow_gitignored": true
    },
    "code_review": {
      "enabled": true,
      "description": "Run comprehensive code review using Claude SDK or CodeRabbit CLI before task completion",
      "tool": "claude"
    }
  },
  "logging": {
    "enabled": true,
    "level": "DEBUG",
    "retentionDays": 7,
    "prettyPrint": false,
    "directory": "~/.local/share/cc-track/logs",
    "description": "Centralized logging system for debugging and monitoring"
  }
}